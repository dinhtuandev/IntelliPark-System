#!/usr/bin/env python3
"""
Setup script for IntelliPark-System
T·ª± ƒë·ªông c√†i ƒë·∫∑t dependencies v√† ki·ªÉm tra m√¥i tr∆∞·ªùng
"""

import subprocess
import sys
import os

def run_command(command):
    """Ch·∫°y l·ªánh v√† tr·∫£ v·ªÅ k·∫øt qu·∫£"""
    try:
        result = subprocess.run(command, shell=True, check=True, capture_output=True, text=True)
        return True, result.stdout
    except subprocess.CalledProcessError as e:
        return False, e.stderr

def check_python_version():
    """Ki·ªÉm tra phi√™n b·∫£n Python"""
    if sys.version_info < (3, 7):
        print("‚ùå C·∫ßn Python 3.7 tr·ªü l√™n!")
        return False
    print(f"‚úÖ Python {sys.version_info.major}.{sys.version_info.minor} - OK")
    return True

def check_files():
    """Ki·ªÉm tra c√°c file c·∫ßn thi·∫øt"""
    print("üîç Ki·ªÉm tra c√°c file c·∫ßn thi·∫øt...")
    
    required_files = [
        "data/parking_1920_1080_loop.mp4",
        "model/model.p", 
        "mask_1920_1080.png"
    ]
    
    missing_files = []
    for file_path in required_files:
        if os.path.exists(file_path):
            print(f"‚úÖ {file_path}")
        else:
            print(f"‚ùå {file_path} - KH√îNG T√åM TH·∫§Y")
            missing_files.append(file_path)
    
    if missing_files:
        print("\n‚ö†Ô∏è  M·ªôt s·ªë file b·ªã thi·∫øu!")
        print("üì• T·∫£i d·ªØ li·ªáu t·ª´: https://drive.google.com/drive/folders/1CjEFWihRqTLNUnYRwHXxGAVwSXF2k8QC?usp=sharing")
        return False
    
    print("‚úÖ T·∫•t c·∫£ file c·∫ßn thi·∫øt ƒë√£ c√≥!")
    return True

def main():
    """H√†m ch√≠nh"""
    print("üöÄ Parking Space Counter - Setup")
    print("=" * 40)
    
    # Ki·ªÉm tra Python version
    if not check_python_version():
        sys.exit(1)
    
    # Ki·ªÉm tra files
    if not check_files():
        print("\nüí° Sau khi t·∫£i d·ªØ li·ªáu, ch·∫°y l·∫°i: python setup.py")
        sys.exit(1)
    
    print("\nüéâ Setup ho√†n t·∫•t!")
    print("üöÄ Ch·∫°y d·ª± √°n: python main.py")
    print("üìñ Xem h∆∞·ªõng d·∫´n: README.md")

if __name__ == "__main__":
    main()